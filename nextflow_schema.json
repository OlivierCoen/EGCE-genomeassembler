{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/EGCE/genomeassembler/main/nextflow_schema.json",
    "title": "EGCE/genomeassembler pipeline parameters",
    "description": "Pipeline dedicated to genome assembly using a mix of Oxford Nanopore long reads and Hi-C data",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(csv|tsv|yaml|json)$",
                    "description": "Path to file containing information about the samples in the experiment.",
                    "help_text": "Input Sample Sheet in YAML / JSON format (can be also CSV / TSV).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "steps": {
            "title": "Steps",
            "type": "object",
            "description": "Skips specific steps",
            "default": "",
            "properties": {
                 "skip_long_read_preparation": {
                    "type": "boolean",
                    "description": "Skip long read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                 "skip_long_reads_fastqc_raw": {
                    "type": "boolean",
                    "description": "Skip FastQC before long read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                 "skip_long_reads_trimming": {
                    "type": "boolean",
                    "description": "Skip trimming during long read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_long_reads_filtering": {
                    "type": "boolean",
                    "description": "Skip filtering during long read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_long_reads_fastqc_prepared": {
                    "type": "boolean",
                    "description": "Skip FastQC after long read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_long_read_nanoq": {
                    "type": "boolean",
                    "description": "Skip NanoQ",
                    "fa_icon": "fas fa-check-circle"
                },
                "skip_draft_assembly": {
                    "type": "boolean",
                    "description": "Skip the draft assembly step",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_draft_assembly_polishing": {
                    "type": "boolean",
                    "description": "Skip the polising of the draft assembly",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_draft_assembly_purging": {
                    "type": "boolean",
                    "description": "Skip the haplotig purging step on the draft assembly",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_short_read_preparation": {
                    "type": "boolean",
                    "description": "Skip long read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_short_reads_fastqc_raw": {
                    "type": "boolean",
                    "description": "Skip FastQC before short read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                 "skip_short_reads_cleaning": {
                    "type": "boolean",
                    "description": "Skip cleaning (trimming and filtering ) during short read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_short_reads_fastqc_prepared": {
                    "type": "boolean",
                    "description": "Skip FastQC after short read preparation",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_first_scaffolding_with_hic": {
                    "type": "boolean",
                    "description": "Skip the first scaffolding with Hi-C step",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_first_scaffolded_assembly_purging": {
                    "type": "boolean",
                    "description": "Skip the haplotig purging step on the first scaffolded assembly",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_second_scaffolding_with_hic": {
                    "type": "boolean",
                    "description": "Skip the first scaffolding with Hi-C step",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_second_scaffolded_assembly_purging": {
                    "type": "boolean",
                    "description": "Skip the haplotig purging step on the second scaffolded assembly",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_closing_gaps_final_assembly": {
                    "type": "boolean",
                    "description": "Skip the step consisting in closing gaps in the final assembly",
                    "fa_icon": "fas fa-hand-scissors"
                },
                "skip_qc": {
                    "type": "boolean",
                    "description": "Skip all quality controls",
                    "fa_icon": "fas fa-check-circle"
                },
                "skip_busco": {
                    "type": "boolean",
                    "description": "Skip the Busco analyses",
                    "fa_icon": "fas fa-check-circle"
                },
                "skip_quast": {
                    "type": "boolean",
                    "description": "Skip the Quast analyses",
                    "fa_icon": "fas fa-check-circle"
                },
                "skip_merqury": {
                    "type": "boolean",
                    "description": "Skip the Merqury analyses",
                    "fa_icon": "fas fa-check-circle"
                },
                "skip_hic_contact_maps": {
                    "type": "boolean",
                    "description": "Skip computation of Hi-C contact maps using Pretext",
                    "fa_icon": "fas fa-check-circle"
                }
            },
            "fa_icon": "fas fa-forward"
        },
        "mapping_options": {
            "title": "Mapping options",
            "type": "object",
            "default": "",
            "properties": {
                "meryl_k_value": {
                    "type": "number",
                    "description": "K-mer value for meryl counting",
                    "default": 15
                },
                "mapper": {
                    "type": "string",
                    "description": "Mapper used",
                    "enum": ["winnowmap", "minimap2"],
                    "default": "winnowmap"
                },
                "quast_mapper": {
                    "type": "string",
                    "description": "Mapper used for Quast",
                    "enum": ["winnowmap", "minimap2"],
                    "default": "minimap2"
                }
            }
        },
        "read_preparation_options": {
            "title": "Read preparation options",
            "type": "object",
            "description": "Options controlling read trimming and filtering.",
            "default": "",
            "properties": {
                "filtering_tool": {
                    "type": "string",
                    "description": "Quality control tool to use",
                    "enum": ["chopper", "seqkit_seq"],
                    "default": "chopper"
                }
            },
            "fa_icon": "fas fa-forward"
        },
        "assembly_options": {
            "title": "Assembly options",
            "type": "object",
            "description": "Options controlling assembly",
            "default": "",
            "properties": {
                "assembly_mode": {
                    "type": "string",
                    "description": "Pipeline mode : type of assembly",
                    "enum": ["diploid", "haplotype"],
                    "default": "diploid"
                },
                "assembler": {
                    "type": "string",
                    "description": "Draft assembly tool",
                    "enum": ["hifiasm", "flye"],
                    "default": "flye"
                }
            },
            "fa_icon": "fas fa-forward"
        },
        "polishing_options": {
            "title": "Polishing options",
            "type": "object",
            "description": "Options controlling polishing",
            "default": "",
            "properties": {
                "nb_racon_rounds": {
                    "type": "number",
                    "default": 1,
                    "description": "Number of Racon polishing rounds before polishing with Medaka",
                    "minimum": 0,
                    "maximum": 5
                },
                "skip_medaka": {
                    "type": "boolean",
                    "description": "Skip polishing with Medaka",
                    "fa_icon": "fas fa-check-circle"
                },
                "medaka_contig_chunksize": {
                    "type": "number",
                    "default": 100,
                    "description": "Number of contigs in a chunk to give to Medaka inference",
                    "minimum": 1
                }
            },
            "fa_icon": "fas fa-forward"
        },
        "phasing_options": {
            "title": "Phasing options",
            "type": "object",
            "description": "Options controlling phasing",
            "default": "",
            "properties": {
                "variant_caller": {
                    "type": "string",
                    "description": "Variant caller to use",
                    "enum": ["clair3", "pepper_margin_deepvariant"],
                    "default": "clair3",
                    "fa_icon": "fas fa-forward"
                },
                "clair3_model": {
                    "type": "string",
                    "description": "Model to use for Clair3 phasing",
                    "enum": ["ont_guppy5", "ont", "hifi", "hifi_revio", "r1041_e82_400bps_sup_v410", "r1041_e82_400bps_sup_v500", "r941_prom_hac_g360+g422", "r941_prom_sup_g5014"],
                    "default": "ont_guppy5",
                    "fa_icon": "fas fa-forward"
                },
                "phasing_tool": {
                    "type": "string",
                    "description": "Tool to use for haplotype phasing",
                    "enum": ["whatshap", "longphase"],
                    "default": "whatshap",
                    "fa_icon": "fas fa-forward"
                }
            },
            "fa_icon": "fas fa-forward"
        },
        "qc_options": {
            "title": "QC options",
            "type": "object",
            "description": "Options for QC tools",
            "default": "",
            "properties": {
                "busco_db": {
                    "type": "string",
                    "description": "Path to busco db (optional)"
                },
                "busco_lineage": {
                    "type": "string",
                    "description": "Busco lineage to use.",
                    "default": "auto",
                    "help": "Example: arthropoda_odb10. See list of lineages at https://busco.ezlab.org/list_of_lineages.html. Otherwise, choose auto / auto_prok / auto_euk to et Busco automatically detect which lineage to use."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/steps"
        },
        {
            "$ref": "#/$defs/read_preparation_options"
        },
        {
            "$ref": "#/$defs/assembly_options"
        },
        {
            "$ref": "#/$defs/polishing_options"
        },
        {
            "$ref": "#/$defs/phasing_options"
        },
        {
            "$ref": "#/$defs/qc_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
